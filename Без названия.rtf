{\rtf1\ansi\ansicpg1251\cocoartf2636
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Italic;\f2\fnil\fcharset0 Menlo-Bold;
}
{\colortbl;\red255\green255\blue255;\red70\green137\blue204;\red28\green34\blue42;\red202\green202\blue202;
\red67\green192\blue160;\red89\green138\blue67;\red212\green214\blue154;\red140\green211\blue254;\red183\green111\blue179;
\red167\green197\blue152;\red194\green126\blue101;}
{\*\expandedcolortbl;;\cssrgb\c33725\c61176\c83922;\cssrgb\c14510\c18039\c21961;\cssrgb\c83137\c83137\c83137;
\cssrgb\c30588\c78824\c69020;\cssrgb\c41569\c60000\c33333;\cssrgb\c86275\c86275\c66667;\cssrgb\c61176\c86275\c99608;\cssrgb\c77255\c52549\c75294;
\cssrgb\c70980\c80784\c65882;\cssrgb\c80784\c56863\c47059;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 import\cf4 \strokec4  \cf5 \strokec5 java\cf4 \strokec4 .\cf5 \strokec5 util\cf4 \strokec4 .*;\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \strokec6 /*\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 Level 1 Boss: Peon\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 Expected Player Skills: Build structures and train minions in an efficient manner\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6 Strategy: Build a single Knight Barracks and train a wave of knight troops every 12 turns.\cf4 \cb1 \strokec4 \
\cf6 \cb3 \strokec6  */\cf4 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 class\cf4 \strokec4  \cf5 \strokec5 Player\cf4 \strokec4  \{\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf2 \strokec2 public\cf4 \strokec4  \cf2 \strokec2 static\cf4 \strokec4  \cf5 \strokec5 void\cf4 \strokec4  
\f1\i \cf7 \strokec7 main
\f0\i0 \cf4 \strokec4 (
\f2\b \cf5 \strokec5 String
\f0\b0 \cf4 \strokec4  \cf8 \strokec8 args\cf4 \strokec4 []) \{\cb1 \
\cb3         
\f2\b \cf5 \strokec5 Scanner
\f0\b0 \cf4 \strokec4  \cf8 \strokec8 in\cf4 \strokec4  = \cf9 \strokec9 new\cf4 \strokec4  \cf7 \strokec7 Scanner\cf4 \strokec4 (
\f2\b \cf5 \strokec5 System
\f0\b0 \cf4 \strokec4 .
\f2\b \cf8 \strokec8 in
\f0\b0 \cf4 \strokec4 );\cb1 \
\cb3         \cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 numObstacles\cf4 \strokec4  = \cf8 \strokec8 in\cf4 \strokec4 .\cf7 \strokec7 nextInt\cf4 \strokec4 ();\cb1 \
\cb3         \cf5 \strokec5 ArrayList\cf4 \strokec4 <\cf5 \strokec5 Obst\cf4 \strokec4 > \cf8 \strokec8 obstacles\cf4 \strokec4  = \cf9 \strokec9 new\cf4 \strokec4  \cf7 \strokec7 ArrayList\cf4 \strokec4 <\cf5 \strokec5 Obst\cf4 \strokec4 >();\cb1 \
\cb3         \cf9 \strokec9 for\cf4 \strokec4  (\cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 i\cf4 \strokec4  = \cf10 \strokec10 0\cf4 \strokec4 ; \cf8 \strokec8 i\cf4 \strokec4  < \cf8 \strokec8 numObstacles\cf4 \strokec4 ; \cf8 \strokec8 i\cf4 \strokec4 ++) \{\cb1 \
\cb3             \cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 obstacleId\cf4 \strokec4  = \cf8 \strokec8 in\cf4 \strokec4 .\cf7 \strokec7 nextInt\cf4 \strokec4 ();\cb1 \
\cb3             \cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 x\cf4 \strokec4  = \cf8 \strokec8 in\cf4 \strokec4 .\cf7 \strokec7 nextInt\cf4 \strokec4 ();\cb1 \
\cb3             \cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 y\cf4 \strokec4  = \cf8 \strokec8 in\cf4 \strokec4 .\cf7 \strokec7 nextInt\cf4 \strokec4 ();\cb1 \
\cb3             \cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 radius\cf4 \strokec4  = \cf8 \strokec8 in\cf4 \strokec4 .\cf7 \strokec7 nextInt\cf4 \strokec4 ();\cb1 \
\cb3             \cf8 \strokec8 obstacles\cf4 \strokec4 .\cf7 \strokec7 add\cf4 \strokec4 (\cf9 \strokec9 new\cf4 \strokec4  \cf7 \strokec7 Obst\cf4 \strokec4 (\cf8 \strokec8 obstacleId\cf4 \strokec4 , \cf8 \strokec8 x\cf4 \strokec4 , \cf8 \strokec8 y\cf4 \strokec4 ));\cb1 \
\cb3         \}\cb1 \
\
\cb3         \cf5 \strokec5 Obst\cf4 \strokec4  \cf8 \strokec8 barracks\cf4 \strokec4  = \cf2 \strokec2 null\cf4 \strokec4 ;\cb1 \
\cb3         \cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 myQueenX\cf4 \strokec4  = -\cf10 \strokec10 1\cf4 \strokec4 , \cf8 \strokec8 myQueenY\cf4 \strokec4  = -\cf10 \strokec10 1\cf4 \strokec4 ;\cb1 \
\cb3         \cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 count\cf4 \strokec4  = \cf10 \strokec10 0\cf4 \strokec4 ;\cb1 \
\
\cb3         \cf6 \strokec6 // game loop\cf4 \cb1 \strokec4 \
\cb3         \cf9 \strokec9 while\cf4 \strokec4  (\cf2 \strokec2 true\cf4 \strokec4 ) \{\cb1 \
\cb3             \cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 gold\cf4 \strokec4  = \cf8 \strokec8 in\cf4 \strokec4 .\cf7 \strokec7 nextInt\cf4 \strokec4 ();\cb1 \
\cb3             \cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 touching\cf4 \strokec4  = \cf8 \strokec8 in\cf4 \strokec4 .\cf7 \strokec7 nextInt\cf4 \strokec4 ();\cb1 \
\cb3             \cf9 \strokec9 for\cf4 \strokec4  (\cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 i\cf4 \strokec4  = \cf10 \strokec10 0\cf4 \strokec4 ; \cf8 \strokec8 i\cf4 \strokec4  < \cf8 \strokec8 numObstacles\cf4 \strokec4 ; \cf8 \strokec8 i\cf4 \strokec4 ++) \{\cb1 \
\cb3                 \cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 obstacleId\cf4 \strokec4  = \cf8 \strokec8 in\cf4 \strokec4 .\cf7 \strokec7 nextInt\cf4 \strokec4 ();\cb1 \
\cb3                 \cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 goldRemaining\cf4 \strokec4  = \cf8 \strokec8 in\cf4 \strokec4 .\cf7 \strokec7 nextInt\cf4 \strokec4 (); \cf6 \strokec6 // -1 if unknown\cf4 \cb1 \strokec4 \
\cb3                 \cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 maxMineSize\cf4 \strokec4  = \cf8 \strokec8 in\cf4 \strokec4 .\cf7 \strokec7 nextInt\cf4 \strokec4 (); \cf6 \strokec6 // -1 if unknown\cf4 \cb1 \strokec4 \
\cb3                 \cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 structureType\cf4 \strokec4  = \cf8 \strokec8 in\cf4 \strokec4 .\cf7 \strokec7 nextInt\cf4 \strokec4 (); \cf6 \strokec6 // -1 = No structure, 0 = Resource Mine, 1 = Tower, 2 = Barracks\cf4 \cb1 \strokec4 \
\cb3                 \cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 owner\cf4 \strokec4  = \cf8 \strokec8 in\cf4 \strokec4 .\cf7 \strokec7 nextInt\cf4 \strokec4 (); \cf6 \strokec6 // -1 = No structure, 0 = Friendly, 1 = Enemy\cf4 \cb1 \strokec4 \
\cb3                 \cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 param1\cf4 \strokec4  = \cf8 \strokec8 in\cf4 \strokec4 .\cf7 \strokec7 nextInt\cf4 \strokec4 ();\cb1 \
\cb3                 \cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 param2\cf4 \strokec4  = \cf8 \strokec8 in\cf4 \strokec4 .\cf7 \strokec7 nextInt\cf4 \strokec4 ();\cb1 \
\
\cb3                 \cf9 \strokec9 if\cf4 \strokec4  (\cf8 \strokec8 barracks\cf4 \strokec4  != \cf2 \strokec2 null\cf4 \strokec4  && \cf8 \strokec8 barracks\cf4 \strokec4 .\cf8 \strokec8 id\cf4 \strokec4  == \cf8 \strokec8 obstacleId\cf4 \strokec4 )\{\cb1 \
\cb3                     \cf8 \strokec8 barracks\cf4 \strokec4 .\cf8 \strokec8 type\cf4 \strokec4  = \cf8 \strokec8 structureType\cf4 \strokec4 ;\cb1 \
\cb3                 \}\cb1 \
\cb3             \}\cb1 \
\cb3             \cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 numUnits\cf4 \strokec4  = \cf8 \strokec8 in\cf4 \strokec4 .\cf7 \strokec7 nextInt\cf4 \strokec4 ();\cb1 \
\cb3             \cf9 \strokec9 for\cf4 \strokec4  (\cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 i\cf4 \strokec4  = \cf10 \strokec10 0\cf4 \strokec4 ; \cf8 \strokec8 i\cf4 \strokec4  < \cf8 \strokec8 numUnits\cf4 \strokec4 ; \cf8 \strokec8 i\cf4 \strokec4 ++) \{\cb1 \
\cb3                 \cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 x\cf4 \strokec4  = \cf8 \strokec8 in\cf4 \strokec4 .\cf7 \strokec7 nextInt\cf4 \strokec4 ();\cb1 \
\cb3                 \cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 y\cf4 \strokec4  = \cf8 \strokec8 in\cf4 \strokec4 .\cf7 \strokec7 nextInt\cf4 \strokec4 ();\cb1 \
\cb3                 \cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 owner\cf4 \strokec4  = \cf8 \strokec8 in\cf4 \strokec4 .\cf7 \strokec7 nextInt\cf4 \strokec4 ();\cb1 \
\cb3                 \cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 type\cf4 \strokec4  = \cf8 \strokec8 in\cf4 \strokec4 .\cf7 \strokec7 nextInt\cf4 \strokec4 ();\cb1 \
\cb3                 \cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 health\cf4 \strokec4  = \cf8 \strokec8 in\cf4 \strokec4 .\cf7 \strokec7 nextInt\cf4 \strokec4 ();\cb1 \
\
\cb3                 \cf9 \strokec9 if\cf4 \strokec4  (\cf8 \strokec8 type\cf4 \strokec4  == -\cf10 \strokec10 1\cf4 \strokec4  && \cf8 \strokec8 owner\cf4 \strokec4  == \cf10 \strokec10 0\cf4 \strokec4 )\{\cb1 \
\cb3                     \cf8 \strokec8 myQueenX\cf4 \strokec4  = \cf8 \strokec8 x\cf4 \strokec4 ;\cb1 \
\cb3                     \cf8 \strokec8 myQueenY\cf4 \strokec4  = \cf8 \strokec8 y\cf4 \strokec4 ;\cb1 \
\cb3                 \}\cb1 \
\cb3             \}\cb1 \
\
\cb3             \cf9 \strokec9 if\cf4 \strokec4 (\cf8 \strokec8 barracks\cf4 \strokec4  == \cf2 \strokec2 null\cf4 \strokec4 )\{\cb1 \
\cb3                 \cf5 \strokec5 double\cf4 \strokec4  \cf8 \strokec8 minDist\cf4 \strokec4  = 
\f2\b \cf5 \strokec5 Double
\f0\b0 \cf4 \strokec4 .
\f2\b \cf8 \strokec8 MAX_VALUE
\f0\b0 \cf4 \strokec4 ;\cb1 \
\cb3                 \cf9 \strokec9 for\cf4 \strokec4  (\cf5 \strokec5 Obst\cf4 \strokec4  \cf8 \strokec8 o\cf9 \strokec9 :\cf4 \strokec4  \cf8 \strokec8 obstacles\cf4 \strokec4 ) \{\cb1 \
\cb3                     \cf5 \strokec5 double\cf4 \strokec4  \cf8 \strokec8 dist\cf4 \strokec4  = 
\f2\b \cf5 \strokec5 Math
\f0\b0 \cf4 \strokec4 .
\f1\i \cf7 \strokec7 sqrt
\f0\i0 \cf4 \strokec4 (
\f2\b \cf5 \strokec5 Math
\f0\b0 \cf4 \strokec4 .
\f1\i \cf7 \strokec7 pow
\f0\i0 \cf4 \strokec4 (\cf8 \strokec8 myQueenX\cf4 \strokec4  - \cf8 \strokec8 o\cf4 \strokec4 .\cf8 \strokec8 x\cf4 \strokec4 , \cf10 \strokec10 2\cf4 \strokec4 ) + 
\f2\b \cf5 \strokec5 Math
\f0\b0 \cf4 \strokec4 .
\f1\i \cf7 \strokec7 pow
\f0\i0 \cf4 \strokec4 (\cf8 \strokec8 myQueenY\cf4 \strokec4  - \cf8 \strokec8 o\cf4 \strokec4 .\cf8 \strokec8 y\cf4 \strokec4 , \cf10 \strokec10 2\cf4 \strokec4 ));\cb1 \
\cb3                     \cf9 \strokec9 if\cf4 \strokec4 (\cf8 \strokec8 dist\cf4 \strokec4  < \cf8 \strokec8 minDist\cf4 \strokec4 )\{\cb1 \
\cb3                         \cf8 \strokec8 minDist\cf4 \strokec4  = \cf8 \strokec8 dist\cf4 \strokec4 ;\cb1 \
\cb3                         \cf8 \strokec8 barracks\cf4 \strokec4  = \cf8 \strokec8 o\cf4 \strokec4 ;\cb1 \
\cb3                     \}\cb1 \
\cb3                 \}\cb1 \
\cb3             \}\cb1 \
\
\cb3             
\f2\b \cf5 \strokec5 String
\f0\b0 \cf4 \strokec4  \cf8 \strokec8 action\cf4 \strokec4  = \cf11 \strokec11 "WAIT"\cf4 \strokec4 ;\cb1 \
\cb3             \cf9 \strokec9 if\cf4 \strokec4 (\cf8 \strokec8 barracks\cf4 \strokec4 .\cf8 \strokec8 type\cf4 \strokec4  == -\cf10 \strokec10 1\cf4 \strokec4 )\{\cb1 \
\cb3                 \cf8 \strokec8 action\cf4 \strokec4  = 
\f2\b \cf5 \strokec5 String
\f0\b0 \cf4 \strokec4 .
\f1\i \cf7 \strokec7 format
\f0\i0 \cf4 \strokec4 (\cf11 \strokec11 "BUILD %d BARRACKS-KNIGHT"\cf4 \strokec4 , \cf8 \strokec8 barracks\cf4 \strokec4 .\cf8 \strokec8 id\cf4 \strokec4 );\cb1 \
\cb3             \}\cb1 \
\
\cb3             \cf8 \strokec8 count\cf4 \strokec4 ++;\cb1 \
\cb3             
\f2\b \cf5 \strokec5 String
\f0\b0 \cf4 \strokec4  \cf8 \strokec8 train\cf4 \strokec4  = \cf11 \strokec11 "TRAIN"\cf4 \strokec4 ;\cb1 \
\cb3             \cf9 \strokec9 if\cf4 \strokec4  (\cf8 \strokec8 count\cf4 \strokec4  == \cf10 \strokec10 12\cf4 \strokec4 )\{\cb1 \
\cb3                 \cf8 \strokec8 count\cf4 \strokec4  = \cf10 \strokec10 0\cf4 \strokec4 ;\cb1 \
\cb3                 \cf9 \strokec9 if\cf4 \strokec4  (\cf8 \strokec8 barracks\cf4 \strokec4 .\cf8 \strokec8 type\cf4 \strokec4  == \cf10 \strokec10 2\cf4 \strokec4 )\{\cb1 \
\cb3                     \cf8 \strokec8 train\cf4 \strokec4  = \cf8 \strokec8 train\cf4 \strokec4  + \cf11 \strokec11 " "\cf4 \strokec4  + \cf8 \strokec8 barracks\cf4 \strokec4 .\cf8 \strokec8 id\cf4 \strokec4 ;\cb1 \
\cb3                 \}\cb1 \
\cb3             \}\cb1 \
\
\cb3             \cf6 \strokec6 // First line: A valid queen action\cf4 \cb1 \strokec4 \
\cb3             \cf6 \strokec6 // Second line: A set of training instructions\cf4 \cb1 \strokec4 \
\cb3             
\f2\b \cf5 \strokec5 System
\f0\b0 \cf4 \strokec4 .
\f2\b \cf8 \strokec8 out
\f0\b0 \cf4 \strokec4 .\cf7 \strokec7 println\cf4 \strokec4 (\cf8 \strokec8 action\cf4 \strokec4 );\cb1 \
\cb3             
\f2\b \cf5 \strokec5 System
\f0\b0 \cf4 \strokec4 .
\f2\b \cf8 \strokec8 out
\f0\b0 \cf4 \strokec4 .\cf7 \strokec7 println\cf4 \strokec4 (\cf8 \strokec8 train\cf4 \strokec4 );\cb1 \
\cb3         \}\cb1 \
\cb3     \}\cb1 \
\cb3 \}\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 class\cf4 \strokec4  \cf5 \strokec5 Obst\cf4 \strokec4 \{\cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb3     \cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 id\cf4 \strokec4 , \cf8 \strokec8 x\cf4 \strokec4 , \cf8 \strokec8 y\cf4 \strokec4 ;\cb1 \
\cb3     \cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 type\cf4 \strokec4  = -\cf10 \strokec10 1\cf4 \strokec4 ;\cb1 \
\
\cb3     \cf2 \strokec2 public\cf4 \strokec4  \cf7 \strokec7 Obst\cf4 \strokec4 (\cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 id\cf4 \strokec4 , \cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 x\cf4 \strokec4 , \cf5 \strokec5 int\cf4 \strokec4  \cf8 \strokec8 y\cf4 \strokec4 )\{\cb1 \
\cb3         \cf2 \strokec2 this\cf4 \strokec4 .\cf8 \strokec8 id\cf4 \strokec4  = \cf8 \strokec8 id\cf4 \strokec4 ;\cb1 \
\cb3         \cf2 \strokec2 this\cf4 \strokec4 .\cf8 \strokec8 x\cf4 \strokec4  = \cf8 \strokec8 x\cf4 \strokec4 ;\cb1 \
\cb3         \cf2 \strokec2 this\cf4 \strokec4 .\cf8 \strokec8 y\cf4 \strokec4  = \cf8 \strokec8 y\cf4 \strokec4 ;\cb1 \
\cb3     \}\cb1 \
\cb3 \}\cb1 \
\
\
}